model Match {
  id           Int      @id @default(autoincrement())
  tournamentId Int
  round        Int
  status       MatchStatus @default(PENDING)
  startedAt    DateTime?
  endedAt      DateTime?
  nextMatchId  Int?
  
  tournament   Tournament @relation(fields: [tournamentId], references: [id], onDelete: Cascade)
  nextMatch    Match?     @relation("NextMatch", fields: [nextMatchId], references: [id], onDelete: SetNull)
  previousMatches Match[] @relation("NextMatch")
  participants MatchParticipant[]
}

model MatchParticipant {
  id        Int     @id @default(autoincrement())
  matchId   Int
  userId    Int
  score     Int     @default(0)
  isWinner  Boolean @default(false)
  
  match     Match   @relation(fields: [matchId], references: [id], onDelete: Cascade)
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([matchId, userId])
}
